// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String  @unique
  image    String?
  username String  @unique

  chats   Chat[]
  members Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  profileId String  @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  chatId String @db.ObjectId
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String  @unique
  image String?

  profileId String  @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  messages Message[]
  members  Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  content String
  fileUrl String?

  memberId String @db.ObjectId
  member   Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  chatId String @db.ObjectId
  chat   Chat   @relation(fields: [chatId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
